#N canvas 535 25 810 847 10;
#X obj 1 27 cnv 3 800 3 empty empty description 12 12 0 14 #7c7c7c #404040 0;
#X obj 1 101 cnv 3 800 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 83 107 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 1 331 cnv 3 800 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 83 337 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 83 367 cnv 18 3 17 empty empty 1 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 83 395 cnv 18 3 17 empty empty 2 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 1 421 cnv 3 800 3 empty empty example 8 12 0 13 #dcdcdc #000000 0;
#X obj 1 -1 cnv 3 800 3 empty empty som 14 14 1 22 #7c7c7c #404040 0;
#X text 105 337 list:;
#X text 104 367 list:;
#X text 105 396 list:;
#X msg 179 551 print;
#X obj 138 704 som, f 34;
#X floatatom 526 489 5 0 0 0 - - - 0;
#X msg 526 507 learning \$1;
#X floatatom 527 528 5 0 0 0 - - - 0;
#X msg 527 546 topology \$1;
#X floatatom 527 568 5 0 0 0 - - - 0;
#X floatatom 527 607 5 0 0 0 - - - 0;
#X msg 527 586 datasize \$1;
#X floatatom 527 646 5 0 0 0 - - - 0;
#X msg 168 527 reset;
#X text 267 169 amount of epochs for the network stops learning (default = 100), f 63;
#X text 740 8 v.0.1.0;
#X text 112 150 learning: [float];
#X text 111 128 input data: [list];
#X text 113 219 datasize: [integer];
#X text 113 269 reset: [message];
#X text 114 286 print: [message];
#X obj 303 796 print epoch;
#X obj 368 777 print radius;
#X text 267 253 set the neurons weights with randon values between 0 and 1;
#X obj 339 722 bng 16 250 50 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000;
#X text 160 397 bang when the network reachs the maximum epoch;
#N canvas 537 49 825 823 dataset 0;
#X msg 200 212 rewind;
#X obj 202 359 textfile;
#X msg 235 332 bang;
#X obj 200 167 loadbang;
#X obj 202 388 outlet;
#X obj 504 230 until;
#X obj 504 268 f;
#X obj 552 284 + 1;
#X obj 619 240 sel 0;
#X obj 504 314 t f b;
#X obj 504 201 t b b;
#X obj 504 179 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 504 160 inlet;
#X obj 504 342 sel 39;
#X obj 552 304 mod 40;
#X msg 304 217 read data_test_bi.txt;
#X obj 200 188 t b b;
#X msg 302 185 read data_test_tri.txt;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 0;
#X connect 3 0 16 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 9 0;
#X connect 7 0 14 0;
#X connect 8 0 5 1;
#X connect 9 0 13 0;
#X connect 9 1 2 0;
#X connect 10 0 5 0;
#X connect 11 0 10 0;
#X connect 12 0 11 0;
#X connect 13 0 0 0;
#X connect 14 0 6 1;
#X connect 14 0 8 0;
#X connect 15 0 1 0;
#X connect 16 0 0 0;
#X connect 16 1 15 0;
#X connect 17 0 1 0;
#X restore 135 452 pd dataset;
#X obj 135 433 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X text 266 219 size of the input data - "amount of data" (default 20);
#X obj 138 784 print x;
#X obj 161 765 print y;
#X obj 238 740 route learning epoch radius mse, f 44;
#X obj 433 759 print mse;
#X text 269 284 print network info: current learning rate \, current epoch \, current radius and mean square error;
#X obj 197 629 bng 16 250 50 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000;
#X obj 526 449 pack f f, f 13;
#X msg 526 468 netsize \$1 \$2;
#X floatatom 526 431 5 0 0 0 - - - 0;
#X floatatom 601 430 5 0 0 0 - - - 0;
#X text 267 269 reset the network parameters;
#X text 267 202 amount of neighbor neurons between 1 and 8 (default = 4);
#X text 266 150 learning rate between 0 and 1 (default = 0.5);
#X text 267 186 neighborhood radius between 0 and 1 (default = 0.25);
#X text 265 124 input data for training - two-dimensional or three-dimensional (default = two-dimensional, f 58;
#X text 158 337 outputs a list with the neurons weight vectors (x \, y \, and z) for each input data;
#X obj 184 747 print z;
#X obj 238 815 print learning;
#X msg 159 503 random;
#X msg 148 478 linear;
#X msg 190 573 write test_file.txt;
#X text 113 169 epochs: [integer];
#X msg 527 625 epochs \$1;
#X msg 527 664 nradius \$1;
#X text 631 33 Vinícius César de Oliveira;
#X text 113 186 nradius: [float];
#X obj 138 725 route x y z, f 12;
#X text 159 366 list with all updated parameters for each epoch (learning rate \, epoch \, neighborhood radius \, and mean square error);
#X text 160 433 input data for test;
#X text 113 253 random: [message];
#X text 112 236 linear: [message];
#X text 267 236 set the neurons weights with linear values between 0 and 1;
#X text 114 310 write: [message];
#X text 111 109 netsize: [list];
#X text 264 108 nuembers of neurons and weight dimensions (default = 10 \, 2);
#X text 268 308 write the neurons weights into a text file;
#X text 113 202 topology: [integer];
#X text 669 82 tested on pd-0.54-0;
#X text 33 55 implementation of Self-Organized Maps (SOM) \, an unsupervised neural network developed by Teuvo Kohonen;
#X msg 527 703 training \$1;
#X obj 528 685 tgl 16 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 10 765 route index winner;
#X obj 10 786 print index;
#X obj 73 810 print winner;
#X msg 198 597 read test4_file.txt;
#X connect 12 0 13 0;
#X connect 13 0 64 0;
#X connect 13 0 79 0;
#X connect 13 1 40 0;
#X connect 13 2 33 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 16 0 17 0;
#X connect 17 0 13 0;
#X connect 18 0 20 0;
#X connect 19 0 60 0;
#X connect 20 0 13 0;
#X connect 21 0 61 0;
#X connect 22 0 13 0;
#X connect 35 0 13 0;
#X connect 36 0 35 0;
#X connect 40 0 55 0;
#X connect 40 1 30 0;
#X connect 40 2 31 0;
#X connect 40 3 41 0;
#X connect 43 0 13 0;
#X connect 44 0 45 0;
#X connect 45 0 13 0;
#X connect 46 0 44 0;
#X connect 47 0 44 1;
#X connect 56 0 13 0;
#X connect 57 0 13 0;
#X connect 58 0 13 0;
#X connect 60 0 13 0;
#X connect 61 0 13 0;
#X connect 64 0 38 0;
#X connect 64 1 39 0;
#X connect 64 2 54 0;
#X connect 77 0 13 0;
#X connect 78 0 77 0;
#X connect 79 0 80 0;
#X connect 79 1 81 0;
#X connect 82 0 13 0;
